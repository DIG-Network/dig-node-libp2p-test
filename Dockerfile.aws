# Multi-stage build for AWS Elastic Beanstalk (Bootstrap Server Only)
FROM node:22-alpine AS builder

WORKDIR /app
COPY package*.json ./
COPY tsconfig.json ./
RUN npm ci
COPY src/ ./src/
COPY examples/ ./examples/
RUN npm run build

# Production stage
FROM node:22-alpine AS production

RUN apk add --no-cache dumb-init
RUN addgroup -g 1001 -S nodejs
RUN adduser -S dignode -u 1001

WORKDIR /app
COPY package*.json ./
RUN npm ci --only=production && npm cache clean --force

# Copy built application
COPY --from=builder /app/dist ./dist

# Change ownership
RUN chown -R dignode:nodejs /app
USER dignode

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD node -e "const http=require('http');const options={hostname:'localhost',port:3000,path:'/health',timeout:5000};const req=http.request(options,res=>{process.exit(res.statusCode===200?0:1)});req.on('error',()=>process.exit(1));req.end();"

# Environment variables
ENV NODE_ENV=production
ENV PORT=3000

# Use dumb-init
ENTRYPOINT ["dumb-init", "--"]

# Start bootstrap server only for AWS
CMD ["node", "dist/examples/bootstrap-server.js"]
